@model MovieModel

@* Generated from Custom Template. *@
@* Model namespace using directive should be added to _ViewImports.cshtml. *@

@{
    var containerDivClass = "container";
}
@{
    ViewData["Title"] = "Movie Details";
}

<div class="@containerDivClass">
    <h2 style="color: darkmagenta">@ViewData["Title"]</h2>
    <hr />
</div>

@if (Model is not null)
{
<div class="@containerDivClass">
    @if (TempData["Message"] is not null)
    {
    <p class="text-danger">
        @TempData["Message"]
    </p>
    }
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.Name)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.Name)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.RealaseDate)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.RealaseDate)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.TotalRevenue)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.TotalRevenue)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.Director)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.Director)
        </div>
    </div>

@* Can be uncommented and used for many to many relationships. {Entity} may be replaced with the related entiy name in the controller and views. *@
    
    @* Way 1: 
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            <b>@Html.DisplayNameFor(model => model.GenreList)</b>
        </div>
        <div class="col-10">
            @if (Model.GenreList is not null && Model.GenreList.Any())
            {
                foreach (var genreItem in Model.GenreList)
                {
                    @(genreItem.Name);
                    //@(genreItem.Name + " " + genreItem.Surname + "<br>");
                }
            }
        </div>
    </div> *@
    
    @* Way 2: *@
        <div class="row mb-3">
            <div class="col-2 fw-bold">
                @Html.DisplayNameFor(model => model.Genres)
            </div>
            <div class="col-10">
                @Html.Raw(Model.Genres)
            </div>
        </div>

    <hr /> 

    <a asp-action="Index">Back to List</a>
</div>
}
